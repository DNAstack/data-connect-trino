{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-config.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.api.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dialog/fields/fields-dialog.component.html","webpack:///./src/app/dialog/fields/fields-dialog.component.scss","webpack:///./src/app/dialog/fields/fields-dialog.component.ts","webpack:///./src/app/dialog/json/json-dialog.html","webpack:///./src/app/dialog/json/json-dialog.scss","webpack:///./src/app/dialog/json/json-dialog.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../environments/environment';\n\n@Injectable()\nexport class AppConfigService {\n  config;\n\n  constructor(private http: HttpClient) {\n  }\n\n  loadAppConfig() {\n    return this.http.get('/assets/appConfig.json')\n      .toPromise()\n      .then(data => {\n        this.config = Object.assign({}, environment, data);\n        console.debug('Runtime configuration', this.config);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfigService } from './app-config.service';\nimport { MatSnackBar } from '@angular/material';\nimport { catchError, delay, map } from 'rxjs/operators';\nimport { ObservableInput } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private readonly apiUrl;\n  private readonly wesUrl;\n  private readonly wepKcUrl = 'https://wep-keycloak.staging.dnastack.com/auth/realms/DNAstack/protocol/openid-connect/token';\n\n  constructor(private httpClient: HttpClient,\n    private app: AppConfigService,\n    private snackBar: MatSnackBar) {\n    this.apiUrl = app.config.apiUrl;\n    this.wesUrl = app.config.wesUrl;\n  }\n\n  getFields() {\n    return this.httpClient.get(`${this.apiUrl}/fields`)\n      .pipe(\n        catchError((err) => this.errorSnack(err))\n      );\n  }\n\n  doQuery(query) {\n    return this.httpClient.post(`${this.apiUrl}/search`, query)\n      .pipe(\n        catchError((err) => this.errorSnack(err))\n      );\n  }\n\n  doWorkflowExecution(token, params) {\n    const inputsJsonFileContents = `{\"calculateMd5.input_file\": ${params.vcf_object}}`;\n    const file = new File([inputsJsonFileContents], 'inputs.json', {type: 'application/json'});\n    const wepWorkflowUrl = 'https://wep-restapi.staging.dnastack.com/api/workflow/organization/303276/project/303293/workflow/303424';\n    const wesRunsUrl = 'https://wes-translator.staging.dnastack.com/ga4gh/wes/v1/runs';\n\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('Authorization', `Bearer ${token}`);\n\n    let data = new FormData();\n    data.append('workflow_url', wepWorkflowUrl);\n    data.append('workflow_params', file);\n\n    return this.httpClient.post<any>(wesRunsUrl, data, {headers});\n  }\n\n  getToken(delayTime: number = 0) {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const body = 'grant_type=password&client_id=dnastack-client&username=marc&password=changeit';\n\n    return this.httpClient.post<any>(this.wepKcUrl, body, { headers}).pipe(\n      delay(delayTime),\n      map(({access_token}) => access_token)\n    );\n  }\n\n  monitorJob(token, runId) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('Authorization', `Bearer ${token}`);\n    return this.httpClient.get(`https://wes-translator.staging.dnastack.com/ga4gh/wes/v1/runs/${runId}/status`, {headers});\n  }\n\n  private errorSnack(err): ObservableInput<{}> {\n    this.snackBar.open(err.message, null, {\n      panelClass: 'error-snack'\n    });\n    throw err;\n  }\n}\n","module.exports = \"<div class=\\\"full-page\\\" style=\\\"display: flex; flex-direction: column\\\">\\n  <mat-toolbar color=\\\"primary\\\" style=\\\"height:64px\\\">\\n    <button matTooltip=\\\"Toggle Search\\\" class=\\\"m-r-sm\\\" mat-icon-button (click)=\\\"leftSidenav.toggle()\\\"><i\\n        class=\\\"material-icons\\\">search</i></button>\\n    <div>{{sitename}}</div>\\n    <span class=\\\"fill-space\\\"></span>\\n    <button matTooltip=\\\"Toggle Workflow Executor\\\" class=\\\"m-r-sm\\\" mat-icon-button (click)=\\\"rightSidenav.toggle()\\\"><i\\n      class=\\\"material-icons\\\">cloud_queue</i></button>\\n  </mat-toolbar>\\n  <div style=\\\"flex:1\\\">\\n    <mat-sidenav-container style=\\\"height: 100%\\\">\\n      <mat-sidenav position=\\\"start\\\" #leftSidenav mode=\\\"side\\\" [(opened)]=\\\"view.leftSidebarOpened\\\" style=\\\"min-width:400px\\\">\\n          <div class=\\\"display:hidden\\\">Stuff</div>\\n            <mat-toolbar class=\\\"toolbar-white\\\" style=\\\"position: absolute; top:0; width: 100%\\\">\\n              <div>Search</div>\\n              <span class=\\\"fill-space\\\"></span>\\n            </mat-toolbar>\\n            <div style=\\\"position:absolute; left:0; right:0; top:64px; bottom:64px; overflow-y: auto\\\">\\n              <mat-toolbar style=\\\"background: none\\\">\\n                <mat-toolbar-row>\\n                  <button tabindex=\\\"-1\\\" matTooltip=\\\"Show fields\\\" style=\\\"display:inline\\\" class=\\\"m-r-sm\\\" mat-stroked-button\\n                    (click)=\\\"showFields()\\\"><i class=\\\"material-icons\\\">grid_on</i></button>\\n                  <button [hidden]=\\\"!view.showJSONs\\\" tabindex=\\\"-1\\\" matTooltip=\\\"Show Query JSON\\\" style=\\\"display:inline\\\" class=\\\"m-r-sm\\\"\\n                    mat-stroked-button (click)=\\\"showJson(transformQuery(), 'Query JSON')\\\"><i class=\\\"material-icons\\\">code</i></button>\\n                  <span class=\\\"fill-space\\\"></span>\\n                  <!--button matTooltip=\\\"Show starred results\\\" style=\\\"display:inline\\\" mat-stroked-button (click)=\\\"showCart($event)\\\"><i class=\\\"material-icons\\\">star</i></button-->\\n                  <button tabindex=\\\"-1\\\" matTooltip=\\\"Search\\\" style=\\\"display:inline\\\" class=\\\"m-l-sm\\\" mat-stroked-button\\n                    color=\\\"{{view.queryChanged ? 'primary' : '' }}\\\" (click)=\\\"doQuery(query)\\\"\\n                    [disabled]=\\\"view.isQuerying || !view.queryChanged\\\"><i class=\\\"material-icons\\\"\\n                      *ngIf=\\\"!view.isQuerying\\\">search</i>\\n                    <div *ngIf=\\\"view.isQuerying\\\" style=\\\"width:32px; height:26px\\\">\\n                      <mat-spinner style=\\\"margin-top:7px; margin-left:6px\\\" [diameter]=\\\"20\\\"></mat-spinner>\\n                    </div>\\n                  </button>\\n                </mat-toolbar-row>\\n              </mat-toolbar>\\n              <div class=\\\"clearfix\\\"></div>\\n              <mat-accordion>\\n                <mat-expansion-panel [hidden]=\\\"!view.displayQueryComponents.select\\\">\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      Select\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div>\\n                    <div class=\\\"m-b-sm\\\">\\n                      <button tabindex=\\\"-1\\\" mat-button (click)=\\\"selectAllFields(true)\\\" class=\\\"m-r-sm\\\">All</button><button\\n                        tabindex=\\\"-1\\\" (click)=\\\"selectAllFields(false)\\\" mat-button>None</button>\\n                    </div>\\n                    <div *ngFor=\\\"let field of config.fields | keyvalue\\\">\\n                      <mat-checkbox [checked]=\\\"isFieldSelected(field.value)\\\"\\n                        (change)=\\\"toggleFieldSelection($event,field.value)\\\">\\n                          <div>{{field.value.name}}</div>\\n                          <span class=\\\"text-muted\\\" style=\\\"font-style: italic\\\">{{field.value.table}}</span>\\n                        </mat-checkbox>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n                <mat-expansion-panel [hidden]=\\\"!view.displayQueryComponents.from\\\">\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      From\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div>\\n                    {{query.from}}\\n                  </div>\\n                  <div class=\\\"text-muted\\\">\\n                    This value is hardcoded\\n                  </div>\\n                </mat-expansion-panel>\\n                <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [hidden]=\\\"!view.displayQueryComponents.where\\\">\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      Where\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div>\\n                    <query-builder [(ngModel)]=\\\"query.where\\\" (ngModelChange)=\\\"queryChanged($event)\\\" [config]=\\\"config\\\"\\n                      *ngIf=\\\"config.fields\\\">\\n\\n                      <ng-container\\n                        *queryButtonGroup=\\\"let ruleset; let addRule=addRule; let addRuleSet=addRuleSet; let removeRuleSet=removeRuleSet\\\">\\n                        <button type=\\\"button\\\" matTooltip=\\\"Add Rule\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addRule()\\\">\\n                          <mat-icon>add</mat-icon>\\n                        </button>\\n                        <button type=\\\"button\\\" matTooltip=\\\"Add Ruleset\\\" mat-icon-button color=\\\"primary\\\" *ngIf=\\\"addRuleSet\\\"\\n                          (click)=\\\"addRuleSet()\\\">\\n                          <mat-icon>add_circle_outline</mat-icon>\\n                        </button>\\n                        <button type=\\\"button\\\" mat-icon-button matTooltip=\\\"Remove Ruleset\\\" color=\\\"accent\\\"\\n                          *ngIf=\\\"removeRuleSet\\\" (click)=\\\"removeRuleSet()\\\">\\n                          <mat-icon>remove_circle_outline</mat-icon>\\n                        </button>\\n                      </ng-container>\\n\\n                      <ng-container *queryArrowIcon>\\n                        <mat-icon ngClass=\\\"mat-arrow-icon\\\">chevron_right</mat-icon>\\n                      </ng-container>\\n\\n                      <ng-container *queryRemoveButton=\\\"let rule; let removeRule=removeRule\\\">\\n                        <button type=\\\"button\\\" mat-icon-button matTooltip=\\\"Remove Rule\\\" color=\\\"accent\\\"\\n                          (click)=\\\"removeRule(rule)\\\">\\n                          <mat-icon>remove</mat-icon>\\n                        </button>\\n                      </ng-container>\\n\\n                      <ng-container *querySwitchGroup=\\\"let ruleset; let onChange=onChange\\\">\\n                        <mat-radio-group *ngIf=\\\"ruleset\\\" [(ngModel)]=\\\"ruleset.condition\\\"\\n                          (ngModelChange)=\\\"onChange($event)\\\">\\n                          <mat-radio-button [style.padding.px]=\\\"10\\\" value=\\\"and\\\">And</mat-radio-button>\\n                          <mat-radio-button [style.padding.px]=\\\"10\\\" value=\\\"or\\\">Or</mat-radio-button>\\n                        </mat-radio-group>\\n                      </ng-container>\\n\\n                      <ng-container\\n                        *queryField=\\\"let rule; let fields=fields; let onChange=onChange; let getFields = getFields\\\">\\n                        <mat-form-field>\\n                          <mat-select [(ngModel)]=\\\"rule.field\\\" (ngModelChange)=\\\"onChange($event, rule)\\\">\\n                            <mat-option *ngFor=\\\"let field of getFields(rule.entity)\\\" [value]=\\\"field.value\\\">\\n                              {{ field.name }}\\n                            </mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                      <ng-container *queryOperator=\\\"let rule; let operators=operators; let onChange=onChange\\\">\\n                        <mat-form-field [style.width.px]=\\\"90\\\">\\n                          <mat-select [(ngModel)]=\\\"rule.operator\\\" (ngModelChange)=\\\"onChange()\\\">\\n                            <mat-option *ngFor=\\\"let value of operators\\\" [value]=\\\"value\\\">\\n                              {{ value }}\\n                            </mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                      <ng-container *queryInput=\\\"let rule; type: 'phenotype'\\\">\\n                        <button mat-stroked-button>Choose HPO Term(s)</button>\\n                      </ng-container>\\n\\n                      <ng-container *queryInput=\\\"let rule; type: 'boolean'; let onChange=onChange\\\">\\n                        <mat-checkbox [(ngModel)]=\\\"rule.value\\\" (ngModelChange)=\\\"onChange()\\\"></mat-checkbox>\\n                      </ng-container>\\n\\n                      <ng-container\\n                        *queryInput=\\\"let rule; let field=field; let options=options; type: 'category'; let onChange=onChange\\\">\\n                        <mat-form-field>\\n                          <mat-select [(ngModel)]=\\\"rule.value\\\" (ngModelChange)=\\\"onChange()\\\">\\n                            <mat-option *ngFor=\\\"let opt of options\\\" [value]=\\\"opt.value\\\">\\n                              {{ opt.name }}\\n                            </mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                      <ng-container *queryInput=\\\"let rule; type: 'date'; let onChange=onChange\\\">\\n                        <mat-form-field>\\n                          <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"rule.value\\\" (ngModelChange)=\\\"onChange()\\\">\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker #picker></mat-datepicker>\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                      <ng-container\\n                        *queryInput=\\\"let rule; let options=options; type: 'multiselect'; let onChange=onChange\\\">\\n                        <mat-form-field [style.width.px]=\\\"300\\\">\\n                          <mat-select [(ngModel)]=\\\"rule.value\\\" multiple (ngModelChange)=\\\"onChange()\\\">\\n                            <mat-option *ngFor=\\\"let opt of options\\\" [value]=\\\"opt.value\\\">\\n                              {{ opt.name }}\\n                            </mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                      <ng-container *queryInput=\\\"let rule; let field=field; type: 'number'; let onChange=onChange\\\">\\n                        <mat-form-field [style.width.px]=\\\"100\\\">\\n                          <input matInput [(ngModel)]=\\\"rule.value\\\" type=\\\"number\\\" (ngModelChange)=\\\"onChange()\\\">\\n                        </mat-form-field>\\n                        {{field.units}}\\n                      </ng-container>\\n\\n                      <!-- TODO: Improve -->\\n                      <ng-container *queryInput=\\\"let rule; let field=field; type: 'json'; let onChange=onChange\\\">\\n                        <mat-form-field>\\n                          <input matInput [(ngModel)]=\\\"rule.value\\\" (ngModelChange)=\\\"onChange()\\\">\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                      <!-- TODO: Improve -->\\n                      <ng-container *queryInput=\\\"let rule; let field=field; type: 'string'; let onChange=onChange\\\">\\n                        <mat-form-field>\\n                          <input matInput [(ngModel)]=\\\"rule.value\\\" (ngModelChange)=\\\"onChange()\\\">\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                      <ng-container *queryInput=\\\"let rule; let field=field; type: 'string[]'; let onChange=onChange\\\">\\n                        <mat-form-field>\\n                          <input matInput [(ngModel)]=\\\"rule.value\\\" (ngModelChange)=\\\"onChange()\\\">\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                      <ng-container *queryInput=\\\"let rule; let field=field; type: 'textarea'; let onChange=onChange\\\">\\n                        <mat-form-field>\\n                          <textarea matInput [(ngModel)]=\\\"rule.value\\\" (ngModelChange)=\\\"onChange()\\\">\\n                            </textarea>\\n                        </mat-form-field>\\n                      </ng-container>\\n\\n                    </query-builder>\\n                  </div>\\n                </mat-expansion-panel>\\n                <mat-expansion-panel [hidden]=\\\"!view.displayQueryComponents.limit\\\">\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      Limit\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div>\\n                    {{query.limit}}\\n                  </div>\\n                  <div class=\\\"text-muted\\\">\\n                    This value is changed using the paginator\\n                  </div>\\n                </mat-expansion-panel>\\n                <mat-expansion-panel  [hidden]=\\\"!view.displayQueryComponents.offset\\\">\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      Offset\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div>\\n                    {{query.offset}}\\n                  </div>\\n                  <div class=\\\"text-muted\\\">\\n                    This value is changed using the paginator\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n            <div class=\\\"b-t\\\" style=\\\"position: absolute; bottom:0; width: 100%; z-index: 100; background-color: white\\\">\\n              <div class=\\\"m-a\\\"><a href=\\\"https://github.com/DNAstack/ga4gh-search\\\" target=\\\"_blank\\\"><span\\n                    class=\\\"fa fa-fw fa-github\\\"></span>GitHub</a>\\n                  </div>\\n            </div>\\n      </mat-sidenav>\\n      <mat-sidenav position=\\\"end\\\" #rightSidenav mode=\\\"side\\\" [(opened)]=\\\"view.rightSidebarOpened\\\" style=\\\"min-width:400px\\\">\\n          <div class=\\\"display:hidden\\\">Stuff</div>\\n              <mat-toolbar class=\\\"toolbar-white\\\" style=\\\"position: absolute; top:0; width: 100%\\\">\\n                <div>Workflow Execution</div>\\n                <span class=\\\"fill-space\\\"></span>\\n              </mat-toolbar>\\n              <div style=\\\"position:absolute; left:0; right:0; top:64px; bottom:0px; overflow-y: auto\\\">\\n                <mat-toolbar style=\\\"background: none\\\">\\n                  <mat-toolbar-row class=\\\"b-b\\\">\\n                    <button [hidden]=\\\"!view.showJSONs\\\" tabindex=\\\"-1\\\" matTooltip=\\\"Show Workflow Execution JSON\\\" style=\\\"display:inline\\\" class=\\\"m-r-sm\\\"\\n                      mat-stroked-button (click)=\\\"showJson(transformQuery(), 'Workflow Execution JSON')\\\"><i class=\\\"material-icons\\\">code</i></button>\\n                    <span class=\\\"fill-space\\\"></span>\\n                    <button tabindex=\\\"-1\\\" matTooltip=\\\"Run Workflows\\\" style=\\\"display:inline\\\" class=\\\"m-l-sm\\\" mat-stroked-button matBadge=\\\"{{selection.selected.length}}\\\" [disabled]=\\\"selection.selected.length == 0 || !validateInputMappings()\\\"\\n                      color=\\\"primary\\\" (click)=\\\"doWorkflowExecution()\\\"><i class=\\\"material-icons\\\">play_arrow</i>\\n                    </button>\\n                  </mat-toolbar-row>\\n                </mat-toolbar>\\n                <div class=\\\"clearfix\\\"></div>\\n                <div class=\\\"m-a\\\">\\n                    <div class=\\\"font-bold\\\">Workflow</div>\\n                    <mat-form-field class=\\\"m-b\\\">\\n                      <mat-select [(ngModel)]=\\\"workflow\\\">\\n                          <mat-option *ngFor=\\\"let workflow of workflows\\\" [value]=\\\"workflow\\\">\\n                            {{workflow.name}}\\n                          </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <div class=\\\"font-bold m-b-sm\\\">Inputs</div>\\n\\n                    <div *ngIf=\\\"!validateInputMappings()\\\" class=\\\"m-b-sm\\\"><div class=\\\"text-muted\\\">Assign each input a field from your search</div></div>\\n\\n                    <div class=\\\"mat-table mat-elevation-z1 m-b\\\">\\n                    <div class=\\\"mat-header-row\\\">\\n\\n                      <div class=\\\"mat-header-cell\\\">\\n                          Input\\n                      </div>\\n                      <div class=\\\"mat-header-cell\\\">\\n                          Field\\n                      </div>\\n                      <div class=\\\"mat-header-cell\\\" style=\\\"max-width: 38px\\\">\\n                      </div>\\n                    </div>\\n                    <div class=\\\"mat-row\\\" *ngFor=\\\"let input of workflow.inputs\\\">\\n\\n                        <div class=\\\"mat-cell\\\" style=\\\"display: flex; flex-direction: row\\\">\\n                          {{input.name}}\\n                        </div>\\n                        <div class=\\\"mat-cell\\\">\\n                            <mat-form-field>\\n                                <mat-select [(ngModel)]=\\\"input.mappedField\\\" class=\\\"mat-input-invalid\\\">\\n                                    <mat-option *ngFor=\\\"let field of config.fields | keyvalue\\\" [value]=\\\"field\\\">\\n                                      {{field.value.name}}\\n                                    </mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"mat-cell\\\" style=\\\"max-width: 38px; padding-left:5px;\\\">\\n                            <i *ngIf=\\\"!input.mappedField\\\" class=\\\"material-icons\\\" matTooltip=\\\"Input not mapped\\\"  style=\\\"font-size:22px; color:#dc3545;\\\">error</i>\\n                            <i *ngIf=\\\"input.mappedField && !isFieldSelected(input.mappedField.value)\\\" matTooltip=\\\"Field not selected in query\\\" class=\\\"material-icons\\\" style=\\\"font-size:22px; color:#ffc107;\\\">error</i>\\n                        </div>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"runs.length || isSubmittingRuns()\\\">\\n                    <div class=\\\"font-bold m-b-sm\\\">Monitor</div>\\n                    <div class=\\\"mat-table mat-elevation-z1\\\">\\n                      <div class=\\\"mat-header-row\\\">\\n                        <div class=\\\"mat-header-cell\\\">\\n                          Execution ID\\n                        </div>\\n                        <div class=\\\"mat-header-cell\\\">\\n                          Status\\n                        </div>\\n                      </div>\\n                      <mat-progress-bar *ngIf=\\\"isSubmittingRuns()\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n                      <div class=\\\"mat-row\\\" *ngFor=\\\"let run of runs\\\">\\n                        <div class=\\\"mat-cell\\\" style=\\\"display: flex; flex-direction: row\\\">{{run}}</div>\\n                        <div class=\\\"mat-cell\\\">\\n                          <div *ngIf=\\\"runStatus[run].state == 'INITIALIZING' || runStatus[run].state == 'RUNNING'\\\"><mat-spinner [diameter]=\\\"20\\\"></mat-spinner></div>\\n                          <div *ngIf=\\\"runStatus[run].state == 'COMPLETE'\\\"><i class=\\\"material-icons\\\" style=\\\"color:green;\\\">check</i></div>\\n                          <div *ngIf=\\\"runStatus[run].state == 'CONNECTION ERROR'\\\">Error</div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n      </mat-sidenav>\\n      <mat-sidenav-content>\\n        <mat-toolbar class=\\\"toolbar-white\\\" style=\\\"height: 64px; position:absolute; top: 0;\\\">\\n          <mat-toolbar-row>\\n            <div>Results</div>\\n            <span class=\\\"fill-space\\\"></span>\\n            \\n            <button [hidden]=\\\"!view.showJSONs\\\" tabindex=\\\"-1\\\" matTooltip=\\\"Show Results JSON\\\" [hidden]=\\\"!results\\\" style=\\\"display:inline\\\" class=\\\"m-r-sm\\\"\\n              mat-stroked-button (click)=\\\"showJson(results, 'Results JSON')\\\"><i class=\\\"material-icons\\\">code</i></button>\\n            <mat-chip-list [hidden]=\\\"selection.selected.length == 0\\\" >\\n                <mat-chip color=\\\"primary\\\">{{selection.selected.length}} selected</mat-chip>\\n              </mat-chip-list>\\n            <mat-paginator #paginator [length]=\\\"1000\\\" [pageSize]=\\\"query.limit\\\" [pageSizeOptions]=\\\"[10, 50, 100]\\\"\\n              (page)=\\\"pageEvent = paginationChanged($event)\\\">\\n            </mat-paginator>\\n            <button tabindex=\\\"-1\\\" mat-icon-button matTooltip=\\\"Wrap cell content\\\" style=\\\"display:inline\\\"\\n              (click)=\\\"view.wrapResultTableCells = !view.wrapResultTableCells\\\"\\n              color=\\\"{{view.wrapResultTableCells ? 'primary' : '' }}\\\">\\n              <mat-icon>wrap_text</mat-icon>\\n            </button>\\n          </mat-toolbar-row>\\n        </mat-toolbar>\\n        <div style=\\\"position:absolute; width:100%; top:64px; bottom:0; overflow-y: auto\\\">\\n          <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"view.isQuerying\\\"></mat-progress-bar>\\n          <div *ngIf=\\\"!results\\\"\\n            style=\\\"height: 100%; display: flex; flex-direction:column; justify-content: center; align-items: center; color: #bdbdbd;\\\">\\n            <div>\\n              <i class=\\\"material-icons\\\" style=\\\"font-size: 100px !important\\\">not_interested</i>\\n            </div>\\n            <div style=\\\"font-size: 16px !important\\\">\\n              No search results\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"results\\\" class=\\\"m-v\\\">\\n            <div id=\\\"results\\\" class=\\\"mat-table m-s mat-elevation-z1\\\"\\n              [ngClass]=\\\"{ 'no-wrap' : !view.wrapResultTableCells }\\\">\\n              <div class=\\\"mat-header-row\\\">\\n                <div class=\\\"mat-header-cell mat-column-select\\\">\\n                    <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                    </mat-checkbox>\\n                </div>\\n                <div class=\\\"mat-header-cell\\\" *ngFor=\\\"let field of results.fields\\\">{{field.name}}</div>\\n              </div>\\n              <div class=\\\"mat-row\\\" *ngFor=\\\"let result of results.results\\\">\\n                <div class=\\\"mat-cell mat-column-select\\\">\\n                    <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(result) : null\\\"\\n                    [checked]=\\\"selection.isSelected(result)\\\">\\n                    </mat-checkbox>\\n                </div>\\n                <div class=\\\"mat-cell\\\" *ngFor=\\\"let value of result.values; let i = index\\\">\\n                  <div *ngIf=\\\"value.field.type == 'json'\\\">\\n                    <button tabindex=\\\"-1\\\" mat-stroked-button\\n                      (click)=\\\"showJson(jsonify({'value' : value.value}), value.field.name)\\\">JSON</button>\\n                  </div>\\n                  <div *ngIf=\\\"value.field.type == 'org.ga4gh.drs'\\\">\\n                        {{value.value.name}}\\n                        <button mat-stroked-button tabindex=\\\"-1\\\" matTooltip=\\\"Show DRS JSON\\\"\\n                        (click)=\\\"showJson({'value' : jsonify(value.value)}, getDrsLabel(value.value))\\\"><i class=\\\"material-icons\\\">code</i></button>\\n                        <button mat-stroked-button tabindex=\\\"-1\\\"  matTooltip=\\\"Download Object\\\" class=\\\"m-l-sm\\\"\\n                        (click)=\\\"downloadDrs(value.value)\\\"><i class=\\\"material-icons\\\">arrow_downward</i></button>\\n                  </div>\\n                  <div *ngIf=\\\"value.field.type != 'json' && value.field.type != 'org.ga4gh.drs'\\\">\\n                    {{value.value}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"m-b\\\"></div>\\n          </div>\\n        </div>\\n      </mat-sidenav-content>\\n    </mat-sidenav-container>\\n  </div>\\n</div>\\n\"","module.exports = \"/deep/ html {\\n  font: 14px sans-serif; }\\n\\n.font-bold {\\n  font-weight: bold; }\\n\\n.mat-icon-button {\\n  outline: none; }\\n\\n.mat-arrow-icon {\\n  outline: none;\\n  line-height: 32px; }\\n\\n.mat-form-field {\\n  padding-left: 5px;\\n  padding-right: 5px; }\\n\\n.text-input {\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  border: 1px solid #ccc; }\\n\\n.text-area {\\n  width: 300px;\\n  height: 100px; }\\n\\n.output {\\n  width: 100%;\\n  height: 300px; }\\n\\n.m-l-lg {\\n  margin-left: 30px; }\\n\\n.m-l-sm {\\n  margin-left: 10px; }\\n\\n.m-r-lg {\\n  margin-right: 30px; }\\n\\n.m-r-sm {\\n  margin-right: 10px; }\\n\\n.m-b-lg {\\n  margin-bottom: 30px; }\\n\\n.m-b-sm {\\n  margin-bottom: 10px; }\\n\\n.m-b {\\n  margin-bottom: 20px; }\\n\\n.m-t {\\n  margin-top: 20px; }\\n\\n.m-t-sm {\\n  margin-top: 10px; }\\n\\n.m-a {\\n  margin: 20px; }\\n\\n.m-s {\\n  margin: 0 20px 0 20px; }\\n\\n.m-v {\\n  margin: 20px 0 20px 0; }\\n\\n.h4 {\\n  font-size: 16px;\\n  margin: 0; }\\n\\n.h5 {\\n  font-size: 14px;\\n  margin: 0; }\\n\\n.b-b {\\n  border-bottom: 1px solid #e0e0e0; }\\n\\n.b-t {\\n  border-top: 1px solid #e0e0e0; }\\n\\n.text-muted {\\n  color: #4f4f4f; }\\n\\n.mat-table {\\n  display: block; }\\n\\n.mat-row,\\n.mat-header-row {\\n  display: flex;\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-bottom-color: #CCC;\\n  align-items: center;\\n  min-height: 48px;\\n  padding: 0 24px; }\\n\\n.mat-cell,\\n.mat-header-cell {\\n  flex: 1;\\n  overflow: hidden;\\n  word-wrap: break-word;\\n  font-size: 14px; }\\n\\n.no-wrap .mat-header-cell,\\n.no-wrap .mat-header-cell button,\\n.no-wrap .mat-cell {\\n  display: block;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap; }\\n\\n.mat-row:hover {\\n  background-color: #f9f9f9; }\\n\\n/deep/ .error-snack {\\n  color: red; }\\n\\n/deep/ .success-snack {\\n  color: #20d760; }\\n\\nmat-paginator {\\n  background: none !important; }\\n\\n.fill-space {\\n  flex: 1 1 auto; }\\n\\n.toolbar-white {\\n  height: 64px;\\n  background-color: white;\\n  border-bottom: 1px solid #e0e0e0;\\n  z-index: 100; }\\n\\nhtml, body {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n  padding: 0; }\\n\\n.full-page {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n\\n.box-container {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.box-container .box-header {\\n    display: flex;\\n    flex-direction: row; }\\n\\n.box-container .box-content {\\n    flex: 1; }\\n\\n.box-container .box-footer {\\n    display: flex;\\n    flex-direction: row; }\\n\\na:hover {\\n  text-decoration: none; }\\n\\n.mat-column-select {\\n  overflow: initial;\\n  max-width: 40px;\\n  padding-top: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW0vQ29kZS9OZXRCZWFuc1Byb2plY3RzL2dhNGdoLXNlYXJjaC1hZGFwdGVyLXByZXN0by9mcm9udGVuZC9kZW1vL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYTtFQUNiLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLFlBQVk7RUFDWixhQUFhLEVBQUE7O0FBR2Y7RUFDRSxXQUFXO0VBQ1gsYUFBYSxFQUFBOztBQUdmO0VBQ0UsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsZUFBZTtFQUNmLFNBQVMsRUFBQTs7QUFHWDtFQUNFLGVBQWU7RUFDZixTQUFTLEVBQUE7O0FBR1g7RUFDRSxnQ0FDRixFQUFBOztBQUVBO0VBQ0UsNkJBQ0YsRUFBQTs7QUFFQTtFQUNFLGNBQWMsRUFBQTs7QUFHaEI7RUFDRSxjQUFjLEVBQUE7O0FBR2hCOztFQUVFLGFBQWE7RUFDYix3QkFBd0I7RUFDeEIsMEJBQTBCO0VBQzFCLHlCQUF5QjtFQUN6QixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLGVBQWUsRUFBQTs7QUFHakI7O0VBRUUsT0FBTztFQUNQLGdCQUFnQjtFQUNoQixxQkFBcUI7RUFDckIsZUFBYyxFQUFBOztBQUloQjs7O0VBSU0sY0FBYztFQUNkLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsbUJBQW1CLEVBQUE7O0FBSXpCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0UsVUFBVSxFQUFBOztBQUdaO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjtFQUNFLDJCQUEyQixFQUFBOztBQUc3QjtFQUNFLGNBQWMsRUFBQTs7QUFHaEI7RUFDRSxZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLGdDQUFnQztFQUNoQyxZQUFZLEVBQUE7O0FBR2Q7RUFFSSxXQUFXO0VBQ1gsWUFBWTtFQUVaLFNBQVM7RUFDVCxVQUFVLEVBQUE7O0FBR2Q7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUyxFQUFBOztBQUdYO0VBQ0UsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztFQUVULFlBQVk7RUFDWixXQUFXO0VBRVosYUFBYTtFQUNiLHNCQUFzQixFQUFBOztBQVZ2QjtJQWFJLGFBQWE7SUFDYixtQkFBbUIsRUFBQTs7QUFkdkI7SUFrQkUsT0FBTyxFQUFBOztBQWxCVDtJQXNCSSxhQUFhO0lBQ2IsbUJBQW1CLEVBQUE7O0FBSXZCO0VBRUkscUJBQXFCLEVBQUE7O0FBSXpCO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuL2RlZXAvIGh0bWwge1xuICBmb250OiAxNHB4IHNhbnMtc2VyaWY7XG59XG5cbi5mb250LWJvbGQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLm1hdC1pY29uLWJ1dHRvbiB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5tYXQtYXJyb3ctaWNvbiB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAzMnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgcGFkZGluZy1yaWdodDogNXB4O1xufVxuXG4udGV4dC1pbnB1dCB7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbn1cblxuLnRleHQtYXJlYSB7XG4gIHdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiAxMDBweDtcbn1cblxuLm91dHB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDMwMHB4O1xufVxuXG4ubS1sLWxnIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG59XG5cbi5tLWwtc20ge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuLm0tci1sZyB7XG4gIG1hcmdpbi1yaWdodDogMzBweDtcbn1cblxuLm0tci1zbSB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLm0tYi1sZyB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5tLWItc20ge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4ubS1iIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLm0tdCB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbi5tLXQtc20ge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ubS1hIHtcbiAgbWFyZ2luOiAyMHB4O1xufVxuXG4ubS1zIHtcbiAgbWFyZ2luOiAwIDIwcHggMCAyMHB4O1xufVxuXG4ubS12IHtcbiAgbWFyZ2luOiAyMHB4IDAgMjBweCAwO1xufVxuXG4uaDQge1xuICBmb250LXNpemU6IDE2cHg7XG4gIG1hcmdpbjogMDtcbn1cblxuLmg1IHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW46IDA7XG59XG5cbi5iLWIge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UwZTBlMFxufVxuXG4uYi10IHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTBcbn1cblxuLnRleHQtbXV0ZWQge1xuICBjb2xvcjogIzRmNGY0Zjtcbn1cblxuLm1hdC10YWJsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubWF0LXJvdyxcbi5tYXQtaGVhZGVyLXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDtcbiAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNDQ0M7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1pbi1oZWlnaHQ6IDQ4cHg7XG4gIHBhZGRpbmc6IDAgMjRweDtcbn1cblxuLm1hdC1jZWxsLFxuLm1hdC1oZWFkZXItY2VsbCB7XG4gIGZsZXg6IDE7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgZm9udC1zaXplOjE0cHg7XG59XG5cbi8vIFRydW5jYXRlIHRleHQgaW4gdGFibGVzIHdpdGggZWxsaXBzaXNcbi5uby13cmFwIHtcbiAgICAubWF0LWhlYWRlci1jZWxsLFxuICAgIC5tYXQtaGVhZGVyLWNlbGwgYnV0dG9uLFxuICAgIC5tYXQtY2VsbCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgfVxuICB9XG5cbi5tYXQtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcbn1cblxuL2RlZXAvIC5lcnJvci1zbmFjayB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi9kZWVwLyAuc3VjY2Vzcy1zbmFjayB7XG4gIGNvbG9yOiAjMjBkNzYwO1xufVxuXG5tYXQtcGFnaW5hdG9yIHtcbiAgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uZmlsbC1zcGFjZSB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4udG9vbGJhci13aGl0ZSB7XG4gIGhlaWdodDogNjRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMGUwO1xuICB6LWluZGV4OiAxMDA7XG59XG5cbmh0bWwsIGJvZHlcbntcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLmZ1bGwtcGFnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xufVxuXG4uYm94LWNvbnRhaW5lciB7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcblxuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cblx0LmJveC1oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcblx0fVxuXG5cdC5ib3gtY29udGVudCB7XG5cdFx0ZmxleDogMTtcbiAgfVxuXG4gIC5ib3gtZm9vdGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG5cdH1cbn1cblxuYSB7XG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxufVxuXG4ubWF0LWNvbHVtbi1zZWxlY3Qge1xuICBvdmVyZmxvdzogaW5pdGlhbDtcbiAgbWF4LXdpZHRoOiA0MHB4O1xuICBwYWRkaW5nLXRvcDogNXB4O1xufVxuIl19 */\"","import { FormBuilder, FormControl } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from './app.api.service';\nimport { Field } from './model/search/field';\nimport { Rule, RuleSet } from 'angular2-query-builder';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { JsonDialog } from './dialog/json/json-dialog';\nimport { FieldsDialogComponent } from './dialog/fields/fields-dialog.component';\nimport { AppConfigService } from './app-config.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { delay, repeat, switchMap, takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  \n  public sitename : string;\n  public queryCtrl: FormControl;\n\n  events: string[] = [];\n  opened: boolean;\n\n  runs = [];\n  runStatus = {};\n\n  public selection = new SelectionModel(true, []);\n\n  public query = {\n    select: [\n        {\n            table: \"pgp_canada\",\n            name: \"participant_id\"\n        },\n        {\n          table: \"pgp_canada\",\n          name: \"vcf_object\"\n        }\n      ],\n    from: 'pgp_canada',\n    where: {\n      condition: 'and',\n      rules: [\n        {\n          \"field\": \"pgp_canada.key\",\n          \"operator\": \"=\",\n          \"value\": \"Sex\"\n        },\n        {\n          \"field\": \"pgp_canada.raw_value\",\n          \"operator\": \"=\",\n          \"value\": \"F\"\n        },\n        {\n          \"field\": \"pgp_canada.chromosome\",\n          \"operator\": \"=\",\n          \"value\": \"chr1\"\n        },\n        {\n          \"field\": \"pgp_canada.start_position\",\n          \"operator\": \"=\",\n          \"value\": 5087263\n        },\n        {\n          \"field\": \"pgp_canada.reference_base\",\n          \"operator\": \"=\",\n          \"value\": \"A\"\n        },\n        {\n          \"field\": \"pgp_canada.alternate_base\",\n          \"operator\": \"=\",\n          \"value\": \"G\"\n        }\n      ]\n    },\n    limit: 100,\n    offset: 0\n  };\n\n  public config = {\n    fields: undefined\n  };\n\n  public view = {\n    showJSONs: false,\n    leftSidebarOpened: false,\n    rightSidebarOpened : false,\n    wrapResultTableCells: true,\n    isQuerying: false,\n    selectedTabIndex: 0,\n    queryChanged: false,\n    displayQueryComponents : {\n      select : true,\n      from : true,\n      where : true,\n      limit : true,\n      offset : true\n    }\n  }\n\n  public workflows = [\n    {\n      name : \"md5sum\",\n      inputs : [\n        {\n          id : \"input_file\",\n          name : \"File\",\n        }\n      ],\n      url : \"http://localhost:8080/api/workflow/organization/108/project/125/workflowVersion/260\"\n    },\n    {\n      name : \"DeepVariant\",\n      inputs : [\n        {\n          id : \"input_files\",\n          name : \"Files\",\n        }\n      ],\n      url : \"http://localhost:8080/api/workflow/organization/108/project/125/workflowVersion/260\"\n    }\n  ];\n\n  public workflow = this.workflows[0];\n  \n  public results = null;\n\n  private jsonDialogRef: MatDialogRef<JsonDialog>;\n  private fieldsDialogRef: MatDialogRef<FieldsDialogComponent>;\n\n  constructor(\n    private app: AppConfigService,\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {\n    this.sitename = app.config.sitename;\n    this.view.showJSONs = app.config.developerMode;\n    this.queryCtrl = this.formBuilder.control(this.query.where);\n  }\n\n  transformSelect(selectFields) {\n    var newSelectFields = [];\n    for (var i = 0; i < selectFields.length; i++) {\n      newSelectFields.push({\"field\" : selectFields[i].table + \".\" + selectFields[i].name});\n    }\n    return newSelectFields;\n  }\n\n  transformRule(rule: RuleSet | Rule) {\n    if ('condition' in rule) {\n      return this.transformCondition(rule)\n    } else if ('operator' in rule) {\n      return this.transformOperator(rule)\n    } else {\n      throw new Error('Unknown rule format');\n    }\n  }\n\n  transformCondition(rule: RuleSet) {\n    var predicates = []\n    for (let subrule of rule.rules) {\n      predicates.push(this.transformRule(subrule))\n    }\n    return {\n      'p': rule.condition,\n      'predicates': predicates\n    }\n  }\n\n  transformOperator(rule: Rule) {\n    var p = {\n      'p': rule.operator,\n      'rfield': rule.field\n    }\n    p[this.valueKey(rule.field)] = rule.value\n    return p\n  }\n\n  valueKey(fieldName: string): string {\n    var field: Field = this.config.fields[fieldName]\n    if (field.type == 'string') {\n      return 'lstring'\n    } else if (field.type == 'number') {\n      return 'lnumber'\n    } else if (field.type == 'boolean') {\n      return 'lboolean'\n    } else {\n      return 'lvalue'\n    }\n  }\n\n  jsonify(str: string) {\n    return JSON.parse(str);\n  }\n\n  paginationChanged(event) {\n    this.query.limit = event.pageSize;\n    this.query.offset = event.pageSize * event.pageIndex;\n    this.view.queryChanged = true;\n  }\n\n  transformQuery() {\n    return {\n      'select': this.transformSelect(this.query.select),\n      'from': [{\n        'table': this.query.from\n      }],\n      'where': this.transformRule(this.query.where),\n      'limit': this.query.limit,\n      'offset': this.query.offset\n    }\n  }\n\n  createSearchRequest() {\n    return { json_query: this.transformQuery() }\n  }\n\n  // This is inefficient, being called a lot\n  isFieldSelected(field) {\n    var tableName = field.table;\n    var fieldName = field.name;\n    for (var i = 0; i < this.query.select.length; i++) {\n      if (this.query.select[i].table == tableName && this.query.select[i].name == fieldName) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  toggleFieldSelection(event, field: Field) {\n    var fieldName = field.name;\n    var checked = event.checked;\n    if (checked) {\n      this.query.select.push(field);\n    } else {\n      for (var i = 0; i < this.query.select.length; i++) {\n        if (this.query.select[i].name == fieldName) {\n          this.query.select.splice(i, 1);\n          return;\n        }\n      }\n    }\n    this.view.queryChanged = true;\n  }\n\n  selectAllFields(b: boolean) {\n    if (b) {\n      var newSelect = [];\n      for (var index in this.config.fields) {\n        newSelect.push(this.config.fields[index]);\n      }\n      this.query.select = newSelect;\n    } else {\n      this.query.select = [];\n    }\n    this.view.queryChanged = true;\n  }\n\n  public showJson(jsonObj: any, title: string): void {\n    this.jsonDialogRef = this.dialog.open(JsonDialog, {\n      width: '80%',\n      height: '80%',\n      data: { query: jsonObj, title: title }\n    });\n  }\n\n  public showFields(): void {\n    this.fieldsDialogRef = this.dialog.open(FieldsDialogComponent, {\n      width: '80%',\n      height: '80%',\n      data: { fields: this.config.fields }\n    });\n  }\n\n  public getDrsLabel(drs) {\n    return JSON.parse(drs).name;\n  }\n\n  numWorkflowsSubmitted = 0;\n\n  public doWorkflowExecution() {\n\n    this.numWorkflowsSubmitted += this.selection.selected.length;\n\n    for (var i = 0; i < this.selection.selected.length; i++) {\n\n      var row = this.selection.selected[i].values;\n\n      var params = {};\n\n      for (var j = 0; j < this.workflow.inputs.length; j++) {\n        var input: any = this.workflow.inputs[j];\n        var field = input.mappedField;\n\n        var fieldName = field.value.name;\n\n        for (var k = 0; k < row.length; k++) {\n          if (row[k].field.name == fieldName) {\n            params[fieldName] = row[k].value;\n          }\n        }\n      }\n\n      var wes = {\n        workflowUrl : this.workflow.url,\n        parameters : params\n      }\n\n      this.apiService.getToken(i*5000).pipe(\n        switchMap((token) => this.apiService.doWorkflowExecution(token, params))\n      ).subscribe(\n        ({run_id}) => this.startJobMonitor(run_id),\n        ({error}) => this.snackError(error.msg || error.message)\n      );\n    }\n  }\n\n  public isSubmittingRuns() {\n    return this.numWorkflowsSubmitted > this.runs.length;\n  }\n\n  startJobMonitor(runId) {\n    this.runs.push(runId);\n    this.runStatus[runId] = {\n      state: 'INITIALIZING'\n    };\n\n    return this.apiService.getToken().pipe(\n      switchMap((token) => this.apiService.monitorJob(token, runId)),\n      delay(10000),\n      repeat(100),\n      takeWhile(({state}: any): any => {\n        return state === 'INITIALIZING' || state === 'RUNNING';\n      })\n    ).subscribe(\n      (res) => {\n        this.runStatus[runId] = res;\n      },\n      ({error}) => {\n        this.runStatus[runId] = 'CONNECTION ERROR';\n        this.snackError(`Error getting run ${runId} status: ${error.msg || error.message}`)\n      },\n      () => {\n        this.runStatus[runId] = {state: 'COMPLETE'};\n      }\n    )\n  }\n\n  public doQuery(query) {\n    this.view.isQuerying = true;\n    var searchRequest = this.createSearchRequest()\n    this.apiService.doQuery(searchRequest).subscribe(\n      (dto) => {\n        this.view.queryChanged = false;\n\n        this.results = dto;\n        this.view.isQuerying = false;\n        this.view.selectedTabIndex = 2;\n      },\n      (err) => {\n        console.log('Error', err)\n        this.view.isQuerying = false;\n      });\n  }\n\n  validateInputMappings() {\n    for (var j = 0; j < this.workflow.inputs.length; j++) {\n      var input: any = this.workflow.inputs[j];\n      if (!input.mappedField) {\n        return false;\n      } else if (!this.isFieldSelected(input.mappedField.value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  queryChanged($event) {\n    this.view.queryChanged = true;\n  }\n\n  downloadDrs(drsStr) {\n    var drs = JSON.parse(drsStr);\n    var url = drs.urls[0].url;\n    window.open(url);\n  }\n\n  normalizeArray<T>(array: Array<T>, indexKey: keyof T) {\n    const normalizedObject: any = {}\n    for (let i = 0; i < array.length; i++) {\n      const key = array[i][indexKey]\n      normalizedObject[key] = array[i]\n    }\n    return normalizedObject as { [key: string]: T }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.results.results.length;\n    return numSelected == numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.results.results.forEach(row => this.selection.select(row));\n  }\n\n  snack(message) {\n    this.snackBar.open(message, \"Dismiss\", {\n      panelClass: 'success-snack'\n    });\n  }\n\n  snackError(message) {\n    return this.snackBar.open(message, null, {\n      panelClass: 'error-snack'\n    });\n  }\n\n  ngOnInit(): void {\n\n    this.apiService\n      .getFields()\n      .subscribe((fields: Field[]) => {\n        this.config.fields = this.normalizeArray(fields, 'id');\n        this.view.selectedTabIndex = 0;\n      },\n        (err) => console.log('Error', err));\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NgJsonEditorModule} from 'ang-jsoneditor';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {QueryBuilderModule} from 'angular2-query-builder';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatIconModule,\n  MatInputModule,\n  MatNativeDateModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatSidenavModule,\n  MatExpansionModule,\n  MatProgressBarModule,\n  MatBadgeModule,\n  MatChipsModule\n} from '@angular/material';\nimport {AppConfigService} from './app-config.service';\nimport { JsonDialog } from './dialog/json/json-dialog';\nimport { FieldsDialogComponent } from './dialog/fields/fields-dialog.component';\nimport { ClipboardModule } from 'ngx-clipboard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JsonDialog,\n    FieldsDialogComponent\n  ],\n  entryComponents: [\n    JsonDialog,\n    FieldsDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgJsonEditorModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    QueryBuilderModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatTabsModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatIconModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatProgressBarModule,\n    MatBadgeModule,\n    MatChipsModule,\n    ClipboardModule\n  ],\n  providers: [\n    AppConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (appConfig: AppConfigService) => {\n        return () => {\n          return appConfig.loadAppConfig();\n        };\n      },\n      multi: true,\n      deps: [AppConfigService]\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<mat-toolbar class=\\\"toolbar-white\\\">\\n  <mat-toolbar-row>\\n    <div>Fields</div>\\n    <span class=\\\"fill-space\\\"></span>\\n    <button [hidden]=\\\"!view.showJSONs\\\" matTooltip=\\\"Show Fields JSON\\\" tabindex=\\\"-1\\\" style=\\\"display:inline\\\" mat-stroked-button\\n      (click)=\\\"showJson(fields, 'Fields JSON')\\\"><i class=\\\"material-icons\\\">code</i></button>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<table mat-table cdk-focus-start [dataSource]=\\\"dataTable\\\" class=\\\"mat-elevation-z0\\\">\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell *matHeaderCellDef> Id </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"type\\\">\\n    <th mat-header-cell *matHeaderCellDef> Type </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"value\\\">\\n    <th mat-header-cell *matHeaderCellDef> Value </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.value}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"specification\\\">\\n    <th mat-header-cell *matHeaderCellDef> Specification </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> <a href=\\\"{element.specification}\\\">{{element.specification}}</a> </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"operators\\\">\\n    <th mat-header-cell *matHeaderCellDef> Operators </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.operators}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.toolbar-white {\\n  background-color: white;\\n  border-bottom: 1px solid #e0e0e0;\\n  margin-bottom: 20px; }\\n\\n.fill-space {\\n  flex: 1 1 auto; }\\n\\nmat-dialog-container {\\n  padding: 0px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW0vQ29kZS9OZXRCZWFuc1Byb2plY3RzL2dhNGdoLXNlYXJjaC1hZGFwdGVyLXByZXN0by9mcm9udGVuZC9kZW1vL3NyYy9hcHAvZGlhbG9nL2ZpZWxkcy9maWVsZHMtZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsdUJBQXVCO0VBQ3ZCLGdDQUFnQztFQUNoQyxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxjQUFjLEVBQUE7O0FBR2hCO0VBQ0UsdUJBQXVCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kaWFsb2cvZmllbGRzL2ZpZWxkcy1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4udG9vbGJhci13aGl0ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyBcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5maWxsLXNwYWNlIHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbm1hdC1kaWFsb2ctY29udGFpbmVyIHtcbiAgcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, Inject } from '@angular/core';\nimport { Field } from '../../model/search/field';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material';\nimport { JsonDialog } from '../../dialog/json/json-dialog';\nimport { AppConfigService } from '../../app-config.service';\n\n@Component({\n  templateUrl: './fields-dialog.component.html',\n  styleUrls: ['./fields-dialog.component.scss'],\n})\nexport class FieldsDialogComponent {\n\n  fields: any;\n  dataTable: Field[];\n  displayedColumns: string[] = ['id', 'name', 'type'];\n  public view;\n\n  private jsonDialogRef: MatDialogRef<JsonDialog>;\n\n  constructor(\n    private app: AppConfigService,\n    private dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    //this.view.showJSONs = app.config.developerMode;\n    console.log(app.config);\n\n    this.view = {showJSONs: app.config.developerMode };\n    this.fields = this.data.fields;\n    this.dataTable = Object.keys(this.data.fields)\n      .map(fieldKey => this.data.fields[fieldKey]);\n  }\n\n  public showJson(jsonObj: any, title : string): void {\n    this.jsonDialogRef = this.dialog.open(JsonDialog, {\n      width: '80%',\n      height: '80%',\n      data: { query: jsonObj, title: title }\n    });\n  }\n}\n","module.exports = \"\\n<mat-toolbar class=\\\"toolbar-white\\\">\\n    <mat-toolbar-row>\\n        <div>{{title}}</div>\\n      <div class=\\\"fill-space\\\"></div>\\n      <button mat-icon-button tabindex=\\\"-1\\\" matTooltip=\\\"Expand\\\" style=\\\"display:inline\\\" (click)=\\\"expand(true)\\\" class=\\\"m-r-s\\\"><mat-icon>unfold_more</mat-icon></button>\\n      <button mat-icon-button tabindex=\\\"-1\\\" matTooltip=\\\"Collapse\\\" style=\\\"display:inline\\\" (click)=\\\"expand(false)\\\" class=\\\"m-r-s\\\"><mat-icon>unfold_less</mat-icon></button>\\n      <button mat-icon-button tabindex=\\\"-1\\\" matTooltip=\\\"Copy to clipboard\\\" style=\\\"display:inline\\\" ngxClipboard [cbContent]=\\\"query | json\\\"><mat-icon>file_copy</mat-icon></button>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n<div cdk-focus-start class=\\\"m-v\\\">\\n  <json-editor #jsonEditor [data]=\\\"query\\\" [options]=\\\"editorOptions\\\"></json-editor>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.toolbar-white {\\n  background-color: white;\\n  border-bottom: 1px solid #e0e0e0;\\n  margin-bottom: 20px; }\\n\\n.fill-space {\\n  flex: 1 1 auto; }\\n\\nmat-dialog-container {\\n  padding: 0px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaW0vQ29kZS9OZXRCZWFuc1Byb2plY3RzL2dhNGdoLXNlYXJjaC1hZGFwdGVyLXByZXN0by9mcm9udGVuZC9kZW1vL3NyYy9hcHAvZGlhbG9nL2pzb24vanNvbi1kaWFsb2cuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLHVCQUF1QjtFQUN2QixnQ0FBZ0M7RUFDaEMsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjtFQUNFLHVCQUF1QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGlhbG9nL2pzb24vanNvbi1kaWFsb2cuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi50b29sYmFyLXdoaXRlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UwZTBlMDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmZpbGwtc3BhY2Uge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cblxubWF0LWRpYWxvZy1jb250YWluZXIge1xuICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material';\nimport { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor';\nimport { ClipboardModule } from 'ngx-clipboard';\n\n@Component({\n  selector: 'json-dialog',\n  templateUrl: './json-dialog.html',\n  styleUrls: ['./json-dialog.scss'],\n})\nexport class JsonDialog {\n\n  public editorOptions = new JsonEditorOptions();\n\n  @ViewChild('jsonEditor')\n  jsonEditor: JsonEditorComponent;\n\n  public query: any;\n  public title: string;\n\n  constructor(\n    private dialogRef: MatDialogRef<JsonDialog>,\n    private dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.query = data.query;\n    this.title = data.title;\n\n    this.editorOptions.mode = 'view';\n    this.editorOptions.mainMenuBar = false;\n    this.editorOptions.navigationBar = false;\n    this.editorOptions.statusBar = false;    \n    this.editorOptions.expandAll = false;\n  }\n\n  expand(b: boolean) {\n    if (b) {\n      this.jsonEditor.expandAll();\n    } else {\n      this.jsonEditor.collapseAll();\n    }\n  }\n\n  ngOnInit() {\n    \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}